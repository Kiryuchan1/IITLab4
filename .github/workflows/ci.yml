name: CI Pipeline for Docker and Watchtower

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub runner for CI/CD pipeline

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "Logging in to Docker Hub..."
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Build and push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        # Проверка переменной DOCKER_USERNAME
        if [ -z "$DOCKER_USERNAME" ]; then
          echo "ERROR: DOCKER_USERNAME is not set!"; exit 1;
        fi
        echo "Using DOCKER_USERNAME: $DOCKER_USERNAME"

        # Корректный формат имени образа
        IMAGE_NAME="$DOCKER_USERNAME/mywebapp:latest"

        # Сборка и пуш образа
        docker build -t "$IMAGE_NAME" .
        docker push "$IMAGE_NAME"

    - name: SSH to server and update container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Connecting to server..."

          # Переход в папку проекта
          cd ~/Lab4

          # Обновление репозитория
          git pull origin main

          # Обновление контейнера с приложением
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/mywebapp:latest"

          echo "Stopping old container..."
          docker stop mywebapp || true
          docker rm mywebapp || true

          echo "Pulling new image..."
          docker pull "$IMAGE_NAME"

          echo "Running new container..."
          docker run -d -p 80:80 --name mywebapp "$IMAGE_NAME"
